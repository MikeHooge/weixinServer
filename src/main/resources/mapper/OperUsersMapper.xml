<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biaoche.server.dao.OperUsersMapper">
  <resultMap id="BaseResultMap" type="com.biaoche.server.pojo.entity.OperUsers">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginName" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realName" jdbcType="VARCHAR" property="realName" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="systemUserId" jdbcType="INTEGER" property="systemUserId" />
    <result column="sysetmUserName" jdbcType="VARCHAR" property="sysetmUserName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loginName, password, realName, sex, mobile, state, createTime, systemUserId, 
    sysetmUserName
  </sql>
  <select id="selectByExample" parameterType="com.biaoche.server.pojo.entity.OperUsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from oper_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oper_users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oper_users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.biaoche.server.pojo.entity.OperUsers">
    insert into oper_users (id, loginName, password, 
      realName, sex, mobile, 
      state, createTime, systemUserId, 
      sysetmUserName)
    values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{systemUserId,jdbcType=INTEGER}, 
      #{sysetmUserName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.biaoche.server.pojo.entity.OperUsers">
    insert into oper_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginName != null">
        loginName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        realName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="systemUserId != null">
        systemUserId,
      </if>
      <if test="sysetmUserName != null">
        sysetmUserName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemUserId != null">
        #{systemUserId,jdbcType=INTEGER},
      </if>
      <if test="sysetmUserName != null">
        #{sysetmUserName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.biaoche.server.pojo.entity.OperUsersExample" resultType="java.lang.Long">
    select count(*) from oper_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oper_users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginName != null">
        loginName = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        realName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.systemUserId != null">
        systemUserId = #{record.systemUserId,jdbcType=INTEGER},
      </if>
      <if test="record.sysetmUserName != null">
        sysetmUserName = #{record.sysetmUserName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oper_users
    set id = #{record.id,jdbcType=INTEGER},
      loginName = #{record.loginName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      realName = #{record.realName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      systemUserId = #{record.systemUserId,jdbcType=INTEGER},
      sysetmUserName = #{record.sysetmUserName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.biaoche.server.pojo.entity.OperUsers">
    update oper_users
    <set>
      <if test="loginName != null">
        loginName = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        realName = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemUserId != null">
        systemUserId = #{systemUserId,jdbcType=INTEGER},
      </if>
      <if test="sysetmUserName != null">
        sysetmUserName = #{sysetmUserName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.biaoche.server.pojo.entity.OperUsers">
    update oper_users
    set loginName = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realName = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      systemUserId = #{systemUserId,jdbcType=INTEGER},
      sysetmUserName = #{sysetmUserName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>